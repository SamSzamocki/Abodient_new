{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \{"id":"QLo26z2Skc7ze3ga","name":"Main_agent","active":false,"nodes":[\{"parameters":\{"public":true,"mode":"hostedChat","hostedChatNotice":"","authentication":"none","initialMessages":"Hi there! \uc0\u55357 \u56395 \\nMy name is Nathan. How can I assist you today?","options":\{"responseMode":"responseNode"\}\},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-440,400],"id":"180d12d9-82bb-4bb0-9506-39430dbb815e","name":"When chat message received","webhookId":"c79e88b8-63f7-4721-b655-8aafd4eb221d"\},\{"parameters":\{"notice_tip":"","agent":"toolsAgent","promptType":"auto","text":"=\{\{ $json.chatInput \}\}","hasOutputParser":false,"options":\{"systemMessage":"=***Role\\nYou are an expert an expert property management agent acting on behalf of the landlord, to respond to queries that tenants have and take actions where appropriate. You must use your expertise, as well as the tools at your disposal to consider the context of the query, assessed severity/urgency, contractual position (if applicable), and then respond in the most helpful and friendly manner whilst respecting your legal obligation as a (stand in) landlord. \\n\\n\\n***Tools\\n*ContextAgent: *always* Call this tool as your first step, to check if more context or clarification is required\\n*contractAgent - Used to check the contractual position on a tenants query\\n*classifierAgent - Used to verify the level of urgency and advisable next steps\\n\\nRemember, tools give valuable new information which will help you to provide the best response possible, make use of them as much as you can.\\n\\n***Instructions\\nStep 1: ALWAYS pass an up-to-date summary of the users query, directly to the ContextAgent tool and wait for the response. NEVER SKIP THIS STEP. You must not skip this step else you will fail. Check the Human/AI conversation history to generate a good summary to pass to the ContextAgent tool.\\nALWAYS pass an up-to-date summary of the user\'92s query to the ContextAgent tool and wait for the response. NEVER SKIP THIS STEP.\\n- If the response contains a clarifying question, output this clarifying question to the user and wait for their response.\\n- If the response contains an additional_context_question, output this additional context question to the user and wait for their response.\\n-After receiving a response from the user, send the updated query summary back to the ContextAgent again.\\nRepeat this process until the ContextAgent confirms that no further clarification or context is required.\\n-Only then proceed to Step 2.\\n\\n- Step 2:\\nUsing the summary of the tenant query, convert it into a concise vector search query\\n\\nThe query should be short, use only relevant keywords, and exclude unnecessary words.\\n\\nExample good search query: \\"pet policy rental agreement\\"\\n\\nExample bad search query: \\"What does my rental agreement say about pets?\\"\\n\\n- Step 3: Send the vector search query to the contractTool\\n\\n- Step 4: Send the vector search query to the classifierTool\\n\\n- Step 5: Use the returned information from both contractTool and classifierTool to make an informed decision on how best to respond to the user.\\n\\n- *Important\\nyou are attempting to help the user resolve their problem, but are representing the landlord. Therefore, you must speak in the voice of the landlord, upholding and fulfilling your duties where required to do so according to the contract and generally accepted practices between tenant/landlord relationships.\\n\\nYou may recommend a course of action to be taken on the landlords behalf, such as contacting a plumber, electrician, or any other profession typically employed to resolve tenancy issues. If you deem that this is required, CLEARLY STATE that this is what you will do in your response\\n\\nFinally, NEVER tell the user to communicate with the landlord. YOU ARE the stand-in landlord, therefore telling them to do so is non-sensical. \\n\\n- **Tone \\nHelpful, friendly, but professional\\n\\n- **Output examples\\n\\nExample 1\\n\\nUser summary: User has a persistent issue with mould and has attempted to remove the mould to no avail.\\n\\ncontractTool: The landlord is responsible for general upkeep and making the tenancy livable\\n\\nclassifierTool: Mould is classed as an arguent issue as there are potential risks to the tenants health\\n\\nYour Response: \\"Based on what you've told me, the contract states this issue is now the responsibility of the landlord and should be handled urgently. The landlord will be informed and I will arrange to have an expert sent round to investigate the issue and help you resolve it.\\n\\nExample 2\\n\\nUser summary: There is a leaking roof that is causing water to drip into the tenant\'92s bedroom. The tenant tried patching it with sealant but the leak remains.\\n\\ncontractTool: Landlord is responsible for maintaining the structure and exterior of the property, including the roof.\\n\\nclassifierTool: This issue is high urgency due to the potential for ongoing damage to the property and health/safety risks (e.g., mold, structural concerns).\\n\\nYour Response: \'93According to your tenancy agreement, I\'92m responsible for keeping the roof in good repair to protect your living space. This sounds urgent, so I\'92ll notify the landlord immediately and arrange to have a professional roofer inspect and repair the leak as soon as possible. Thank you for letting us know.\'94\\n\\nExample 3\\n\\nUser summary: The heating system is not working properly, and the tenant has no hot water or heating. They have tried resetting the boiler with no success.\\n\\ncontractTool: The landlord\'92s contractual obligations include providing a functioning heating and hot water system.\\n\\nclassifierTool: Heating and hot water issues are considered urgent, especially if outside temperatures are low or it affects habitability.\\n\\nYour Response:\\n\'93I understand you have no heating or hot water, and that\'92s a serious concern. Under the rental agreement, the landlord is responsible for providing and maintaining a working heating system. I\'92ll inform the landlord right away and arrange for a certified technician to come out and fix the issue as quickly as possible.\'94\\n\\nExample 4\\n\\nUser summary: Tenant would like to add decorations to the apartment and need to drill holes\\n\\ncontractTool: The tenant must receive permission from the landlord before doing any decorative work. The tenant must also return the apartment to a normal state afterwards\\n\\nclassifierTool: Decorations and internal modifications are low risk with no immediate action required, other than to seek permission from the landlord\\n\\nYour Response: \'93Hanging your own decorations is permitted but only once permission from the landlord is sought. If you give me the full details of what you wish to hang up, I will request permission from the landlord for you. Thank you for keeping us updated.\'94\\n\\nNow Begin!","returnIntermediateSteps":false\},"credentials":""\},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[-40,500],"id":"aab04540-b0cb-4d52-ae11-f79c3b56f982","name":"AI Agent"\},\{"parameters":\{"notice":"","model":"gpt-4o-mini","options":\{\}\},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.1,"position":[-160,740],"id":"f886d3f7-f824-4551-8da5-fc1ff98f2a0a","name":"OpenAI Chat Model5","credentials":\{"openAiApi":\{"id":"ce4Dko4ewvOjQLgW","name":"OpenAi account"\}\}\},\{"parameters":\{"notice":"","sessionIdType":"customKey","sessionKey":"187a3d5d3eb44c06b2e3154710ca2ae7","contextWindowLength":5\},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-160,1000],"id":"6ce8e6cb-dc61-4df6-9ed7-25560d8cdb11","name":"Window Buffer Memory"\},\{"parameters":\{"notice":"","noticeTemplateExample":"","name":"Context_Agent","description":"Call this agent to get more context on the question","executeNotice":"","source":"database","workflowId":\{"__rl":true,"value":"BAa1dwbqTsN59O4s","mode":"list","cachedResultName":"Context_agent"\},"fields":\{\},"specifyInputSchema":false,"jsonSchemaExample":"\{\\n\\t\\"some_input\\": \\"some_value\\"\\n\}"\},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.3,"position":[-20,880],"id":"89c1b649-35a1-45c4-8a1b-971bfa1bc707","name":"Context_agent"\},\{"parameters":\{"notice":"","noticeTemplateExample":"","name":"classifier_Agent","description":"Call this tool to understand the level of urgency of the query","executeNotice":"","source":"database","workflowId":\{"__rl":true,"value":"iXHMrTw7UTJxLFdn","mode":"list","cachedResultName":"Classifier_agent"\},"fields":\{\},"specifyInputSchema":false,"jsonSchemaExample":"\{\\n\\t\\"some_input\\": \\"some_value\\"\\n\}"\},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.3,"position":[280,880],"id":"47a64786-efbc-4935-9028-26ee5a177d6a","name":"Classifier_agent"\},\{"parameters":\{"notice":"","noticeTemplateExample":"","name":"contract_Agent","description":"Call this tool to get the contractual position on the current query","executeNotice":"","source":"database","workflowId":\{"__rl":true,"value":"rg3M4eJbdkCAZPns","mode":"list","cachedResultName":"Contract_agent"\},"fields":\{\},"specifyInputSchema":false,"jsonSchemaExample":"\{\\n\\t\\"some_input\\": \\"some_value\\"\\n\}"\},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":1.3,"position":[120,880],"id":"5ecb22a5-7773-4387-a752-b5b7657ea9bc","name":"Contract_agent"\},\{"parameters":\{"notice":"","promptType":"define","text":"=\{\{ $json.output \}\}","hasOutputParser":true,"messages":\{"messageValues":[\{"type":"SystemMessagePromptTemplate","message":"=Turn the input into a structured JSON output. \\"chat_output\\" is the chat input you receive, \\"Query_summary\\" summarises the input (string), \\"actions\\" summarises the actions mentioned in the input. If there is no discernible action mentioned in the input, then leave \\"actions\\" blank.\\n\\nExample:\\nInput:\\nI understand that the hot water system is not working at all, and this is indeed a serious concern as it can greatly affect your day-to-day life. According to your rental agreement, it's the landlord's responsibility to ensure that the hot water system is functioning properly.\\\\n\\\\nI will notify the landlord right away and arrange for a qualified plumber to come out and fix the issue as soon as possible. Thank you for bringing this to our attention, and I appreciate your patience while we work to resolve it.\\n\\nJSON output:\\n\{\\"chat_output\\": \\"I understand that the hot water system is not working at all, and this is indeed a serious concern as it can greatly affect your day-to-day life. According to your rental agreement, it's the landlord's responsibility to ensure that the hot water system is functioning properly.\\\\n\\\\nI will notify the landlord right away and arrange for a qualified plumber to come out and fix the issue as soon as possible. Thank you for bringing this to our attention, and I appreciate your patience while we work to resolve it.\\",\\n\\"query_summary\\": \\"Hot water not working, high risk to tenant, landlords responsibility to fix\\",\\n\\"actions\\": [\\"Notify landlord that the hot water is broken and that a plumber has been contacted\\", \\"Arrange for plumber to fix the hot water issue\\"]\\n\}\\n\\n**Important\\nWhen defining the \\"actions\\", make sure you detail what the actions are for, in the context. Do not arrange for 2 technicians to come if they are both to fix the same problem, just pick the most suitable one"\}]\}\},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[360,500],"id":"2d9d7de3-412a-4650-9e30-ad26bbc638d8","name":"Basic LLM Chain","retryOnFail":true\},\{"parameters":\{"notice":"","model":"gpt-4o-mini","options":\{\}\},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.1,"position":[400,700],"id":"0780b2f7-a38e-4005-ba31-be449ec7f65f","name":"OpenAI Chat Model2","credentials":\{"openAiApi":\{"id":"ce4Dko4ewvOjQLgW","name":"OpenAi account"\}\}\},\{"parameters":\{"notice":"","schemaType":"fromJson","jsonSchemaExample":"\{\\n  \\"chat_output\\": \\"<Input chat received>\\", \\n  \\"query_summary\\": \\"Hot water not working, high risk to tenant, landlords responsibility to fix\\",\\n    \\"actions\\": [\\"Notify landlord\\", \\"Arrange for plumber to fix\\"]\\n\}"\},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[620,760],"id":"9993bc6b-753f-4072-8ee8-fff25aca333e","name":"Structured Output Parser1"\},\{"parameters":\{"mode":"manual","duplicateItem":false,"assignments":\{"assignments":[\{"id":"3a274c36-7a18-41f5-8815-80e74b460d69","name":"output","value":"=\{\{ $json.output.chat_output \}\}","type":"string"\}]\},"includeOtherFields":false,"options":\{\}\},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[920,700],"id":"4b18ee75-84e7-4442-a7d9-46434ff8a447","name":"Chat output"\},\{"parameters":\{"mode":"manual","duplicateItem":false,"assignments":\{"assignments":[\{"id":"3a274c36-7a18-41f5-8815-80e74b460d69","name":"Actions","value":"=\{\{ $json.output.actions \}\}","type":"array"\}]\},"includeOtherFields":false,"options":\{\}\},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1080,380],"id":"650b338f-47db-472e-9e82-267be8747a57","name":"Actions"\},\{"parameters":\{"curlImport":"","method":"POST","url":"=https://samirszamocki.app.n8n.cloud/webhook-test/159d84bd-45f5-43fb-9be9-9f8bc2ed6653","authentication":"none","provideSslCertificates":false,"sendQuery":false,"sendHeaders":false,"sendBody":true,"contentType":"json","specifyBody":"keypair","bodyParameters":\{"parameters":[\{"name":"Actions","value":"=\{\{ $json.Actions \}\}"\}]\},"options":\{\},"infoMessage":""\},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1400,340],"id":"42e81541-b57c-4559-b109-0c80cc83e81f","name":"HTTP Request"\},\{"parameters":\{"mode":"manual","duplicateItem":false,"assignments":\{"assignments":[\{"id":"2f07d90b-1ebf-49fa-972c-3e3439c4a74f","name":"output.actions","value":"=\{\{ $json.output.actions \}\}","type":"array"\}]\},"includeOtherFields":false,"options":\{\}\},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1080,120],"id":"0edbe3c3-4d82-4b07-8309-dae633a30527","name":"Pinned_Mock_action_data"\},\{"parameters":\{"conditions":\{"options":\{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2\},"conditions":[\{"id":"c2d9f195-526d-43e5-9031-160eec4cc5d1","leftValue":"=\{\{ $json.output.actions \}\}","rightValue":"","operator":\{"type":"array","operation":"notEmpty","singleValue":true\}\}],"combinator":"and"\},"looseTypeValidation":false,"options":\{\}\},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[720,420],"id":"f3771681-d3ec-4df0-aac3-eed9b87aabae","name":"If"\},\{"parameters":\{\},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[940,520],"id":"3e98f610-fe64-4d46-b194-4294841356d8","name":"No Operation, do nothing"\},\{"parameters":\{\},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1620,340],"id":"571af6ef-30e7-48cd-b995-b8bf1a12188b","name":"No Operation, do nothing1"\},\{"parameters":\{"generalNotice":"","respondWith":"firstIncomingItem","options":\{\}\},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1160,700],"id":"e3083484-74c7-4dd4-b7cb-8d5734e2496b","name":"Respond to Webhook"\},\{"parameters":\{"notice":""\},"id":"40ec66c8-b086-40d9-b217-0f6100d89c85","name":"When clicking \\"Execute Workflow\\"","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,0]\},\{"parameters":\{"resource":"execution","operation":"getAll","returnAll":true,"filters":\{"workflowId":\{"__rl":true,"value":"255","mode":"list","cachedResultName":"RSS to Slack (#255)"\},"status":"error"\},"options":\{"activeWorkflows":false\},"requestOptions":\{\}\},"id":"6631b506-d084-44a5-a111-31241a900ace","name":"n8n","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[240,20]\},\{"parameters":\{"oldVersionNotice":"","operation":"toFile","fileFormat":"csv","binaryPropertyName":"data","options":\{"headerRow":true\}\},"id":"bf6669a1-7f6b-4943-9c69-d22127ed93f3","name":"Spreadsheet File","type":"n8n-nodes-base.spreadsheetFile","typeVersion":1,"position":[400,0]\}],"connections":\{"When chat message received":\{"main":[[\{"node":"AI Agent","type":"main","index":0\}]]\},"OpenAI Chat Model5":\{"ai_languageModel":[[\{"node":"AI Agent","type":"ai_languageModel","index":0\}]]\},"Window Buffer Memory":\{"ai_memory":[[\{"node":"AI Agent","type":"ai_memory","index":0\}]]\},"AI Agent":\{"main":[[\{"node":"Basic LLM Chain","type":"main","index":0\}]]\},"Context_agent":\{"ai_tool":[[\{"node":"AI Agent","type":"ai_tool","index":0\}]]\},"Classifier_agent":\{"ai_tool":[[\{"node":"AI Agent","type":"ai_tool","index":0\}]]\},"Contract_agent":\{"ai_tool":[[\{"node":"AI Agent","type":"ai_tool","index":0\}]]\},"OpenAI Chat Model2":\{"ai_languageModel":[[\{"node":"Basic LLM Chain","type":"ai_languageModel","index":0\}]]\},"Structured Output Parser1":\{"ai_outputParser":[[\{"node":"Basic LLM Chain","type":"ai_outputParser","index":0\}]]\},"Basic LLM Chain":\{"main":[[\{"node":"Chat output","type":"main","index":0\},\{"node":"If","type":"main","index":0\}]]\},"Actions":\{"main":[[\{"node":"HTTP Request","type":"main","index":0\}]]\},"Chat output":\{"main":[[\{"node":"Respond to Webhook","type":"main","index":0\}]]\},"HTTP Request":\{"main":[[\{"node":"No Operation, do nothing1","type":"main","index":0\}]]\},"Pinned_Mock_action_data":\{"main":[[\{"node":"HTTP Request","type":"main","index":0\}]]\},"If":\{"main":[[],[\{"node":"No Operation, do nothing","type":"main","index":0\}]]\},"When clicking \\"Execute Workflow\\"":\{"main":[[\{"node":"n8n","type":"main","index":0\}]]\},"n8n":\{"main":[[\{"node":"Spreadsheet File","type":"main","index":0\}]]\}\},"settings":\{"executionOrder":"v1","saveExecutionProgress":true,"callerPolicy":"workflowsFromSameOwner"\},"pinData":\{"Pinned_Mock_action_data":[\{"json":\{"output":\{"actions":["Notify landlord about the slippery tiles issue","Recommend using non-slip mats as a temporary safety measure","Arrange for a maintenance inspection to address the slippery tiles"]\}\}\}]\}\}}